# -*- coding: utf-8 -*-

import sys
import os
import re
import codecs

HEADER = '''[Script Info]
; Script generated by Aegisub
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None'''

STYLE = '''[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1'''

EVENT = '''[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text'''

def fileopen(input_file):
    encodings = ["utf-32", "utf-16", "utf-8", "cp1252", "gb2312", "gbk", "big5"]
    tmp = ''
    for enc in encodings:
        try:
            with codecs.open(input_file, mode="r", encoding=enc) as fd:
                tmp = fd.read()
                break
        except:
            # print(enc + ' failed')
            continue
    return [tmp, enc]


def srt2ass(input_file):

    src = fileopen(input_file)
    tmp = src[0]
    encoding = src[1]
    src = ''
    utf8bom = ''

    if u'\ufeff' in tmp:
        tmp = tmp.replace(u'\ufeff', '')
        utf8bom = u'\ufeff'

    tmp = tmp.replace("\r", "")
    lines = [x.strip() for x in tmp.split("\n") if x.strip()]
    sub_lines = ''
    tmp_lines = ''
    line_count = 0
    output_file = '.'.join(input_file.split('.')[:-1])
    output_file += '.ass'

    for ln in range(len(lines)):
        line = lines[ln]
        if line.isdigit() and (ln+1) <= (len(lines)-1) and re.match(r'-?\d\d:\d\d:\d\d', lines[(ln+1)]):
            if tmp_lines:
                sub_lines += tmp_lines + "\n"
            tmp_lines = ''
            line_count = 0
            continue
        else:
            if re.match(r'-?\d\d:\d\d:\d\d', line):
                line = line.replace('-0', '0')
                tmp_lines += 'Dialogue: 0,' + line + ',Default,,0,0,0,,'
            else:
                if line_count < 2:
                    tmp_lines += line
                else:
                    tmp_lines += r'\N' + line
            line_count += 1
        ln += 1

    sub_lines += tmp_lines + "\n"

    sub_lines = re.sub(r'\d(\d:\d{2}:\d{2}),(\d{2})\d', '\\1.\\2', sub_lines)
    sub_lines = re.sub(r'\s+-->\s+', ',', sub_lines)
    # replace style
    sub_lines = re.sub(r'<([ubi])>', r'{\\\g<1>1}', sub_lines)
    sub_lines = re.sub(r'</([ubi])>', r'{\\\g<1>0}', sub_lines)
    sub_lines = re.sub(r'<font\s+color="?#(\w{2})(\w{2})(\w{2})"?>', "{\\\\c&H\\3\\2\\1&}", sub_lines)
    sub_lines = re.sub(r'</font>', "", sub_lines)

    head_str = HEADER + '\n' + '\n' + STYLE + '\n' + '\n' + EVENT

    output_str = utf8bom + head_str + '\n' + sub_lines
    output_str = output_str.encode(encoding)

    with open(output_file, 'wb') as output:
        output.write(output_str)

    output_file = output_file.replace('\\', '\\\\')
    output_file = output_file.replace('/', '//')


if len(sys.argv) > 1:
    for name in sys.argv[1:]:
        if '.ass' in name:
            break

        if not os.path.isfile(name):
            print(name + ' not exist')
            break
        srt2ass(name)
